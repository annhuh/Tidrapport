        // =============
        // Seed körs vid
        // =============
        protected override void Seed(Tidrapport.Models.ApplicationDbContext context)
        {
            // ----------------------------------------------------------------------------------------------
            // Users and roles
            // ----------------------------------------------------------------------------------------------
            #region UserAndRoles
            System.Diagnostics.Debug.WriteLine("Seed of Users and Roles started");
            if (!context.Users.Any(u => u.UserName == "admin"))
            {
                // add roles
                // ---------
                var roleStore = new RoleStore <identityrole>
    (context);
    var roleManager = new RoleManager <identityrole>
        (roleStore);

        roleManager.Create(new IdentityRole { Name = "admin" });
        roleManager.Create(new IdentityRole { Name = "employee" });
        roleManager.Create(new IdentityRole { Name = "economy" });

        // add users
        // ---------
        var userStore = new UserStore <applicationuser>
            (context);
            var userManager = new UserManager <applicationuser>
                (userStore);

                var a1 = new ApplicationUser { Email = "huhta@hotmail.se", PhoneNumber = "070-1111111", UserName = "admin" };
                var e1 = new ApplicationUser { Email = "huhta@hotmail.se", PhoneNumber = "070-1111111", UserName = "annhuh" };
                var e2 = new ApplicationUser { Email = "huhta@hotmail.se", PhoneNumber = "070-1111111", UserName = "economy" };

                userManager.Create(a1, "Pass#1");
                userManager.Create(e1, "Pass#1");
                userManager.Create(e2, "Pass#1");

                // add user to a role
                userManager.AddToRole(a1.Id, "admin");
                userManager.AddToRole(e1.Id, "employee");
                userManager.AddToRole(e2.Id, "economy");

                context.SaveChanges();
                }
                #endregion

                // ----------------------------------------------------------------------------------------------
                // Customer
                // ----------------------------------------------------------------------------------------------
                #region Customer

                if (!context.Customer.Any())
                {
                var customers = new System.Collections.Generic.List <customer>
                    {
                    new Customer { OrgRegNo = "11111111-1111", Name = "Internal" },
                    new Customer { OrgRegNo = "16630202-2345", Name = "YYY AB" },
                    new Customer { OrgRegNo = "16641212-1111", Name = "ZZZ AB" }
                    };

                    customers.ForEach(customer => context.Customer.AddOrUpdate(customer));

                    context.SaveChanges();
                    }
                    #endregion

                    // ----------------------------------------------------------------------------------------------
                    // Project
                    // ----------------------------------------------------------------------------------------------
                    #region Project

                    if (!context.Project.Any())
                    {
                    var projects = new System.Collections.Generic.List<project>
                        {
                        new Project { Name = "Frånvaro", CustomerId = 1 },
                        new Project { Name = "Project 2", StartDate = new DateTime(2016, 5, 15), CustomerId = 2 },
                        new Project { Name = "Project 3", StartDate = new DateTime(2016, 5, 20), EndDate = new DateTime(2016, 10, 15), CustomerId = 2 },
                        };

                        projects.ForEach(customer => context.Project.AddOrUpdate(projects));

                        context.SaveChanges();
                        }
                        #endregion

                        // ----------------------------------------------------------------------------------------------
                        // Activity
                        // ----------------------------------------------------------------------------------------------
                        #region Activity

                        if (!context.Activity.Any())
                        {
                        var activities = new System.Collections.Generic.List<activity>
                            {
                            // internal activities
                            new Activity { Name = "EA", IsActive = true, BalanceEffect = BalanceEffect.NoEffect, ProjectId = 1 },
                            new Activity { Name = "Flex", IsActive = true, BalanceEffect = BalanceEffect.Flex, ProjectId = 1 },
                            new Activity { Name = "Övertid 1", IsActive = true, BalanceEffect = BalanceEffect.Overtime1, ProjectId = 1 },
                            new Activity { Name = "Övertid 2", IsActive = true, BalanceEffect = BalanceEffect.Overtime2, ProjectId = 1 },
                            new Activity { Name = "Sparad semester", IsActive = true, BalanceEffect = BalanceEffect.SavedHolidays, ProjectId = 1 },
                            new Activity { Name = "Betald semester", IsActive = true, BalanceEffect = BalanceEffect.PayedHoliday, ProjectId = 1 },
                            new Activity { Name = "Obetald semester", IsActive = true, BalanceEffect = BalanceEffect.UnpayedHoliday, ProjectId = 1 },

                            // external activities
                            new Activity { Name = "Activity 2", IsActive = true, BalanceEffect = BalanceEffect.NoEffect, ProjectId = 2 },
                            new Activity { Name = "Activity 3", IsActive = true, BalanceEffect = BalanceEffect.NoEffect, ProjectId = 2 },
                            };

                            activities.ForEach(activity => context.Activity.AddOrUpdate(activities));

                            context.SaveChanges();
                            }
                            #endregion

                            // ----------------------------------------------------------------------------------------------
                            // Employee
                            // ----------------------------------------------------------------------------------------------
                            #region Activity

                            if (!context.Employee.Any())
                            {
                            var employees = new System.Collections.Generic.List<employee>
                                {
                                // internal activities
                                new Employee { SSN = "19700101-1111", FirstName = "Anna", LastName = "Andersson", Address = "AGatan 1",
                                ZipCode = "11111", City = "Astad", Country  = "Alabanien",
                                FlexBalance = 0.0, OverTime1 = 0.0, OverTime2 = 0.0, SavedHolidays = 1 },
                                new Employee {  SSN = "19700202-1111", FirstName = "Björn", LastName = "Björnsson", Address = "BGatan 1",
                                ZipCode = "22222", City = "Bstad", Country  = "Belgien",
                                FlexBalance = 2.0, OverTime1 = 2.0, OverTime2 = 2.0, SavedHolidays = 2  },
                                };

                                employees.ForEach(employee => context.Employee.AddOrUpdate(employees));

                                context.SaveChanges();
                                }
                                #endregion

                                // ----------------------------------------------------------------------------------------------
                                // NationalHolidayBalance
                                // ----------------------------------------------------------------------------------------------
                                #region Activity

                                if (!context.HolidayBalance.Any())
                                {
                                var holidayBalances = new System.Collections.Generic.List<holidaybalance>
                                    {
                                    // internal activities
                                    new HolidayBalance { Id = 1, Period = "2016", PayedHolidayBalance = 20, UnPayedHolidayBalance = 0 },
                                    new HolidayBalance { Id = 2, Period = "2016", PayedHolidayBalance = 25, UnPayedHolidayBalance = 0 }
                                    };

                                    holidayBalances.ForEach(employee => context.HolidayBalance.AddOrUpdate(holidayBalances));

                                    context.SaveChanges();
                                    }
                                    #endregion

                                    // ----------------------------------------------------------------------------------------------
                                    // NationalHolidayBalance
                                    // ----------------------------------------------------------------------------------------------
                                    #region Activity

                                    if (!context.NationalHolidayBalance.Any())
                                    {
                                    var nationalHolidayBalances = new System.Collections.Generic.List<nationalholidaybalance>
                                        {
                                        // internal activities
                                        new NationalHolidayBalance { NationalHolidayBalanceId = 1, Period = "2016", 0 },
                                        new NationalHolidayBalance { NationalHolidayBalanceId = 2, Period = "2016", 0 }
                                        };

                                        nationalHolidayBalances.ForEach(employee => context.NationalHolidayBalance.AddOrUpdate(nationalHolidayBalances));

                                        context.SaveChanges();
                                        }
                                        #endregion
}