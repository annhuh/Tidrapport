@model Tidrapport.ViewModels.RegisterEmployee_VM
@using Tidrapport.Models;


@{
    ViewBag.Title = "RegisterEmployee";
}

<h2>Registrera ny anställd</h2>

<h4>Företag: @ViewBag.CompanyName</h4>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>Registrera</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
         
        @*-------
            row 
          -------*@
        <div class="row">
 
            @*------
               col
            ------*@
            <div class="col-md-4">
                @if (ViewBag.CompanyName == "*")
                {
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>
                }
                else
                {
                <div class="form-group">
                    @*@Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-8">
                        @Html.HiddenFor(model => model.CompanyId, htmlAttributes: new { @Value = @ViewBag.CompanyId, @class = "form-control", @readonly = "readonly",  })
                        @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>
                }
            </div>
        </div>
 
        <div class="row">
            @*------
           col
        ------*@
            <div class="col-md-4">
                <h4>Personligt</h4>
                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @Value = "SVERIGE" } })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
            </div>
            @*------
            col
             ------*@
            <div class="col-md-4">
                <h4>Anställning</h4>
                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployedFrom, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.EmployedFrom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployedFrom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployedTo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.EmployedTo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployedTo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NormalWeekHours, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.NormalWeekHours, new { htmlAttributes = new { @class = "form-control", @Value = "40" } })
                            @Html.ValidationMessageFor(model => model.NormalWeekHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
   
                <h4>Semesterperiod</h4>
                @*<fieldset>*@
                      <div class="form-group">
                           <div class="col-md-6">
                                @*@Html.RadioButtonFor(model => model.Period,  HolidayPeriod.Januari)
                                @Html.Label("1 Jan - 31 Dec")<br />
                                @Html.RadioButtonFor(model => model.Period, HolidayPeriod.April)
                                @Html.Label("1 Apr - 31 Mar")<br />*@

                            @*@foreach (var thePeriod in Enum.GetValues(typeof(HolidayPeriod)))
                            {
                                <p> </p>
                                @Html.RadioButtonFor(model => model.Period, thePeriod)
                                @Html.LabelFor(model => model.Period, thePeriod.ToString())
                            }*@
                            @*@Html.ValidationMessageFor(model => model.Period, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
 
                    <div class="form-group">
                        @Html.LabelFor(model => model.NumberOfHolidaysPerYear, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.NumberOfHolidaysPerYear, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumberOfHolidaysPerYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
                @*</fieldset>*@
             </div>
            @*------
                col
            ------*@
            <div class="col-md-4">
                <h4>Inloggningsuppgifter</h4>
                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
                <p>

                </p>
                <h4>Saldon</h4>
                <div class="form-group">
                    @Html.LabelFor(model => model.FlexBalance, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.FlexBalance, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                        @Html.ValidationMessageFor(model => model.FlexBalance, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.OverTimeBalance1, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.OverTimeBalance1, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                        @Html.ValidationMessageFor(model => model.OverTimeBalance1, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.OverTimeBalance2, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.OverTimeBalance2, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                        @Html.ValidationMessageFor(model => model.OverTimeBalance2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OverTimeBalance3, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.OverTimeBalance3, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                        @Html.ValidationMessageFor(model => model.OverTimeBalance3, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SavedHolidays, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.SavedHolidays, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                        @Html.ValidationMessageFor(model => model.SavedHolidays, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

                @*<div class="form-group">
                @Html.LabelFor(model => model.OvertimeBalanceValidFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OvertimeBalanceValidFrom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OvertimeBalanceValidFrom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OvertimeBalanceValidTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OvertimeBalanceValidTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OvertimeBalanceValidTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OvertimeBalance1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OvertimeBalance1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OvertimeBalance1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OvertimeBalance2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OvertimeBalance2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OvertimeBalance2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OvertimeBalance3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OvertimeBalance3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OvertimeBalance3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HolidayBalanceValidFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HolidayBalanceValidFrom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HolidayBalanceValidFrom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HolidayBalanceValidTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HolidayBalanceValidTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HolidayBalanceValidTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaidHolidayBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PaidHolidayBalance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaidHolidayBalance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UnpaidHolidayBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnpaidHolidayBalance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnpaidHolidayBalance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NationalHolidayBalanceValidFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NationalHolidayBalanceValidFrom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NationalHolidayBalanceValidFrom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NationalHolidayBalanceValidTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NationalHolidayBalanceValidTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NationalHolidayBalanceValidTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                </div>
            </div>*@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Spara" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
}

<div>
    <a href="@Request.UrlReferrer" class="btn btn-default btn-md-10" title="">
        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span> Tillbaka
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
